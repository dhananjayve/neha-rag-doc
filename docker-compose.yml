version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rag-postgres
    environment:
      POSTGRES_DB: rag_db
      POSTGRES_USER: raguser
      POSTGRES_PASSWORD: ragpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_schema:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U raguser -d rag_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: rag-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
    # Uncomment the following lines if you have NVIDIA Docker installed
    # runtime: nvidia
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # NestJS Backend
  nestjs-backend:
    build:
      context: ./nestjs-backend
      dockerfile: Dockerfile
    container_name: rag-nestjs
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=rag_db
      - DB_USERNAME=raguser
      - DB_PASSWORD=ragpass
      - JWT_SECRET=your-super-secret-jwt-key
      - PYTHON_BACKEND_URL=http://python-backend:8000
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Python Backend
  python-backend:
    build:
      context: ./python-backend
      dockerfile: Dockerfile
    container_name: rag-python
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://raguser:ragpass@postgres:5432/rag_db
      - NESTJS_URL=http://nestjs-backend:3000
      - OLLAMA_BASE_URL=http://ollama:11434
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    restart: unless-stopped

  # Angular Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag-frontend
    ports:
      - "80:80"
    depends_on:
      - nestjs-backend
      - python-backend
    restart: unless-stopped

volumes:
  postgres_data:
  ollama_data: 